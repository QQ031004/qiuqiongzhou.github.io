{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/Auth/SignIn.js","components/Auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","concat","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","conent","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wSAyBeA,cAAQ,KANI,SAACC,GACxB,MAAO,CACHC,QAAS,kBAAMD,ECLd,SAACA,EAAUE,EAAXC,IACcC,EADyBD,EAAjBC,eAGhBC,OAAOJ,UAAUK,KAAK,WAC3BN,EAAS,CAAEO,KAAM,2BDKZR,CApBO,SAACS,GAEnB,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACdH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,gBACJL,EAAAC,EAAAC,cAAA,MAAII,QAASP,EAAMP,SAAnB,WACAQ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,IAAIF,UAAU,mCACzBJ,EAAMQ,QAAQC,cEAZC,EATQ,WACnB,OACET,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,WACJL,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,WAAZ,YCyBGf,cAZS,SAACoB,GAErB,OADDC,QAAQC,IAAIF,GACJ,CACHd,KAAMc,EAAMG,SAASjB,KACrBW,QAASG,EAAMG,SAASN,UAQjBjB,CA1BA,SAACS,GAAU,IACdH,EAAkBG,EAAlBH,KAAMW,EAAYR,EAAZQ,QAERO,EAAQlB,EAAKmB,IAAMf,EAAAC,EAAAC,cAACc,EAAD,CAAeT,QAASA,IAAcP,EAAAC,EAAAC,cAACe,EAAD,MAC/D,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAG,IAAIF,UAAU,cAAvB,WACEW,uBCgBOK,EA3BK,SAACpB,GAAS,IACrBqB,EAAiBrB,EAAjBqB,cACP,OACIpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,4BAC7BF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACViB,GAAiBA,EAAcC,IAAI,SAAAC,GACjC,OACItB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKD,EAAKE,IACVxB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BmB,EAAKG,KAAnC,KACAzB,EAAAC,EAAAC,cAAA,YAAOoB,EAAKI,SACZ1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACVwB,IAAOL,EAAKM,KAAKC,UAAUC,mBCA/CC,EAdQ,SAAAC,GAAe,IAAbC,EAAaD,EAAbC,QACrB,OACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAc8B,EAAQC,OACtClC,EAAAC,EAAAC,cAAA,sBAAc+B,EAAQE,gBAAtB,IAAwCF,EAAQG,gBAChDpC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAawB,IAAOM,EAAQI,UAAUR,UAAUS,eCW7DC,EAhBI,SAAAP,GAAgB,IAAdQ,EAAcR,EAAdQ,SAClB,OACIxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACTqC,GAAYA,EAASnB,IAAI,SAAAC,GACvB,OACItB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMb,GAAE,YAAAoC,OAAcnB,EAAKE,IAAMD,IAAKD,EAAKE,IACjDxB,EAAAC,EAAAC,cAACwC,EAAD,CAAgBT,QAASX,kCCFjCqB,mLACK,IAAAC,EAEqCC,KAAK9C,MAAvCyC,EAFHI,EAEGJ,SAAU5C,EAFbgD,EAEahD,KAAMwB,EAFnBwB,EAEmBxB,cACxB,OAAKxB,EAAKmB,IAGVf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAC4C,EAAD,CAAaN,SAAUA,KAEvBxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAC6C,EAAD,CAAe3B,cAAeA,OATXpB,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,mBAJjB4C,aA+BTC,cACb5D,YAVsB,SAACoB,GAEvB,MAAO,CACL8B,SAAU9B,EAAMyC,UAAUC,QAAQZ,SAClC5C,KAAMc,EAAMG,SAASjB,KACrBwB,cAAeV,EAAMyC,UAAUC,QAAQhC,iBAMzCiC,2BAAiB,CACf,CAAEC,WAAY,WAAYC,QAAS,CAAC,YAAa,SACjD,CAAED,WAAY,gBAAiBE,MAAO,EAAGD,QAAS,CAAC,OAAQ,WAJhDL,CAMbP,GCGaO,cACf5D,YAXwB,SAACoB,EAAO+C,GAC9B9C,QAAQC,IAAIF,GACZ,IAAMc,EAAKiC,EAASC,MAAMC,OAAOnC,GAC3BgB,EAAW9B,EAAMyC,UAAUS,KAAKpB,SAEtC,MAAO,CACLP,QAFcO,EAAWA,EAAShB,GAAM,KAGxC5B,KAAMc,EAAMG,SAASjB,QAKzByD,2BAAiB,CACf,CAAEC,WAAY,cAHDJ,CAzCQ,SAACnD,GAAU,IAGrBkC,EAAkBlC,EAAlBkC,QAER,OAF0BlC,EAATH,KAERmB,IAEJkB,EAEFjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACjBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAe8B,EAAQC,OACrClC,EAAAC,EAAAC,cAAA,SAAK+B,EAAQP,UAEjB1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,wBAAgB+B,EAAQE,gBAAxB,IAA0CF,EAAQG,gBAClDpC,EAAAC,EAAAC,cAAA,WAAMyB,IAAOM,EAAQI,UAAUR,UAAUS,eAOhDtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,gCApBmBF,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,sBCPjCwD,6MACHnD,MAAQ,CACNoD,MAAO,GACPC,SAAU,MAEZC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACCH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAI5BC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKnE,MAAM2E,OAAOR,EAAKxD,gFAIlB,IAAAkC,EACqBC,KAAK9C,MAAzB4E,EADD/B,EACC+B,UACR,OAFO/B,EACYhD,KACXmB,IAAYf,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,MAEhCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAEhDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWsD,SAAUjC,KAAKmB,gBAEtDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAIyE,GAAiB,gBAnC9B1B,aAuDN3D,cAXS,SAACoB,GACvB,MAAO,CACLiE,UAAWjE,EAAMd,KAAK+E,UACtB/E,KAAMc,EAAMG,SAASjB,OAGE,SAACL,GAC1B,MAAO,CACLmF,OAAQ,SAACK,GAAD,OAAWxF,GRzDAyF,EQyDgBD,ERxD5B,SAACxF,EAAUE,EAAXuC,IACcrC,EADyBqC,EAAjBrC,eAGhBC,OAAOqF,2BACZD,EAAYlB,MACZkB,EAAYjB,UACdlE,KAAK,WACHN,EAAS,CAAEO,KAAM,oBAClBoF,MAAM,SAACC,GACN5F,EAAS,CAAEO,KAAM,cAAeqF,aAVtB,IAACH,KQ4DR1F,CAA6CuE,GCvDtDuB,6MACH1E,MAAQ,CACNoD,MAAO,GACPC,SAAU,GACVsB,UAAW,GACXC,SAAU,MAEZtB,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACCH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAI5BC,aAAe,SAACP,GACZA,EAAEQ,iBACFP,EAAKnE,MAAMwF,OAAOrB,EAAKxD,gFAKlB,IAAAkC,EACoBC,KAAK9C,MAAzBH,EADAgD,EACAhD,KAAM+E,EADN/B,EACM+B,UACd,OAAG/E,EAAKmB,IAAYf,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,MAG/BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,WACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,QAAQ0B,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAEhDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,YACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,WAAW0B,GAAG,WAAWsD,SAAUjC,KAAKmB,gBAGtDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,aAAf,cACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,YAAYsD,SAAUjC,KAAKmB,gBAGrDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,YAAf,aACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,WAAWsD,SAAUjC,KAAKmB,gBAGpDhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXwE,EAAY3E,EAAAC,EAAAC,cAAA,SAAKyE,GAAiB,gBAlD/B1B,aAqEN3D,cAXS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMG,SAASjB,KACrB+E,UAAWjE,EAAMd,KAAK+E,YAGC,SAACpF,GAC1B,MAAO,CACLgG,OAAQ,SAACC,GAAD,OAAajG,ET9CH,SAACiG,GACnB,OAAO,SAACjG,EAAUE,EAAXgG,GAAqD,IAA/B9F,EAA+B8F,EAA/B9F,YAAa+F,EAAkBD,EAAlBC,aAChC7E,EAAWlB,IACXwD,EAAYuC,IAElB7E,EAASjB,OAAO+F,+BACZH,EAAQ1B,MACR0B,EAAQzB,UACVlE,KAAK,SAAC+F,GACN,OAAOzC,EAAUG,WAAW,SAASuC,IAAID,EAAKnE,KAAKV,KAAK+E,IAAI,CACxDT,UAAWG,EAAQH,UACnBC,SAAUE,EAAQF,SAClB9E,SAAUgF,EAAQH,UAAU,GAAKG,EAAQF,SAAS,OAErDzF,KAAK,WACJN,EAAS,CAAEO,KAAM,oBAClBoF,MAAM,SAAAC,GACL5F,EAAS,CAAEO,KAAM,eAAgBqF,WS6BXI,CAAOC,OAG1BlG,CAA6C8F,WCrEtDW,6MACHrF,MAAQ,CACNwB,MAAO,GACPR,QAAS,MAEXsC,aAAe,SAACC,GACZC,EAAKC,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACCH,EAAEK,OAAO9C,GAAKyC,EAAEK,OAAOC,WAG5BC,aAAe,SAACP,GACZA,EAAEQ,iBAEFP,EAAKnE,MAAMiG,cAAc9B,EAAKxD,OAC9BwD,EAAKnE,MAAMkG,QAAQC,KAAK,8EAM1B,OADiBrD,KAAK9C,MAAdH,KACCmB,IAERf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAM0E,SAAU/B,KAAK2B,aAAcrE,UAAU,SAC3CH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAAd,sBACEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,SAAf,SACA7E,EAAAC,EAAAC,cAAA,SAAOJ,KAAK,OAAO0B,GAAG,QAAQsD,SAAUjC,KAAKmB,gBAE/ChE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,SAAO2E,QAAQ,WAAf,mBACA7E,EAAAC,EAAAC,cAAA,YAAUsB,GAAG,UAAUrB,UAAU,uBAAuB2E,SAAUjC,KAAKmB,gBAEzEhE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAAlB,aAdYH,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAU3C,GAAG,mBApBX4C,aAqDb3D,cAZS,SAACoB,GACvB,MAAO,CACLd,KAAMc,EAAMG,SAASjB,OAGE,SAACL,GAC1B,MAAO,CACLyG,cAAe,SAAC/D,GAAD,OAAa1C,ECrDH,SAAC0C,GAEzB,OAAO,SAAC1C,EAAUE,EAAXuC,GAAuDA,EAAhCrC,YAAgC,IAEpDwD,GAAYuC,EAFwC1D,EAAnB0D,gBAGjCnF,EAAUd,IAAWoB,SAASN,QAC9B4F,EAAW1G,IAAWoB,SAASjB,KAAKmB,IAC1CoC,EAAUG,WAAW,YAAY8C,IAAjChC,OAAAiC,EAAA,EAAAjC,CAAA,GACOnC,EADP,CAEIE,gBAAiB5B,EAAQ8E,UACzBjD,eAAgB7B,EAAQ+E,SACxBa,SAAUA,EACV9D,UAAW,IAAIiE,QAChBzG,KAAK,WACJN,EAAS,CAAEO,KAAM,iBAAkBmC,cACpCiD,MAAM,SAACC,GACN5F,EAAS,CAAEO,KAAM,uBAAwBqF,WDqCba,CAAc/D,OAKxC3C,CAA6CyG,GEjB7CQ,6MA9BZ7F,MAAQ,CACP8B,SAAU,CACR,CAAChB,GAAI,IAAKU,MAAO,eAAasE,OAAQ,mCACtC,CAAChF,GAAI,IAAKU,MAAO,mBAAcsE,OAAQ,+BACvC,CAAChF,GAAI,IAAKU,MAAO,mBAAcsE,OAAQ,yGAMzC,OAEExG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACAzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwG,EAAD,MACA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,KACE3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpE,IACjC3C,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,eAAeC,UAAWC,IACtChH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWlD,IACjC7D,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW3B,IACjCpF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWhB,cArBzB9C,aCEEgE,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1D,MACvB,2DClBR,IAAM2D,EAAY,CACf1C,UAAW,MAoCK2C,EAjCK,WAA+B,IAA9B5G,EAA8B6G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAOC,EAAO5H,MACZ,IAAK,cAEH,OADAa,QAAQC,IAAI,eACLwD,OAAAiC,EAAA,EAAAjC,CAAA,GACD1D,EADN,CAEGiE,UAAW,iBAEhB,IAAK,gBAEH,OADAhE,QAAQC,IAAI,iBACLwD,OAAAiC,EAAA,EAAAjC,CAAA,GACD1D,EADN,CAEGiE,UAAW,OAEhB,IAAK,kBAEH,OADAhE,QAAQC,IAAI,mBACLF,EACT,IAAK,iBAEH,OADAC,QAAQC,IAAI,kBACLwD,OAAAiC,EAAA,EAAAjC,CAAA,GACD1D,EADN,CAEGiE,UAAW,OAEhB,IAAK,eAEL,OADAhE,QAAQC,IAAI,gBACLwD,OAAAiC,EAAA,EAAAjC,CAAA,GACD1D,EADN,CAEGiE,UAAW+C,EAAOvC,IAAIwC,UAE3B,QACI,OAAOjH,IClCX2G,EAAY,CACd7E,SAAU,CACP,CAAChB,GAAI,IAAKU,MAAO,eAAasE,OAAQ,mCACtC,CAAChF,GAAI,IAAKU,MAAO,mBAAcsE,OAAQ,+BACvC,CAAChF,GAAI,IAAKU,MAAO,mBAAcsE,OAAQ,iCAiB3BoB,EAbQ,WAA+B,IAA9BlH,EAA8B6G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBF,EAAWK,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQC,EAAO5H,MACZ,IAAK,iBAEH,OADAa,QAAQC,IAAI,kBAAmB8G,EAAOzF,SAC/BvB,EACT,IAAK,uBAEH,OADAC,QAAQC,IAAI,uBAAwB8G,EAAOvC,KACpCzE,EACP,QACE,OAAOA,YCHNmH,EAPKC,YAAgB,CAChClI,KAAM0H,EACNrF,QAAS2F,EACTzE,UAAW4E,mBACXlH,SAAUmH,6DCMZnH,IAASoH,cAVI,CACXC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,iBAON1H,QAAf,ECHI2H,EAAQC,YAAYZ,EACvB3E,YACCwF,YAAgBC,IAAMC,kBAAkB,CAACjJ,0BAAa+F,+BACtDmD,yBAAeC,GACfC,6BAAmBD,EAAU,CAC3BE,wBAAwB,EACxBC,YAAa,QACbC,mBAAmB,MAMrBV,EAAMW,oBAAoBtJ,KAAK,WAC/BuJ,IAASC,OAAOrJ,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,CAAUd,MAAOA,GAAOxI,EAAAC,EAAAC,cAACqJ,EAAD,OACxCC,SAASC,eAAe,WLiGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/J,KAAK,SAAAgK,GACjCA,EAAaC","file":"static/js/main.4e44e36b.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    //props.signOut()\n    return (\n        <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li onClick={props.signOut}>Log Out</li>\n        <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n            {props.profile.initials}\n        </NavLink></li>\n       \n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n\n    // Rad 7 såg ut så i början:\n    //<li><NavLink to='/'>New Project</NavLink></li>\n    //<li><NavLink to='/'>Log Out</NavLink></li>","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err });\n        });\n    }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n\n      firebase.auth().signOut().then(() => {\n          dispatch({ type: 'SIGNOUT_SUCCESS' });\n      });\n  }  \n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n          return firestore.collection('users').doc(resp.user.uid).set({\n              firstName: newUser.firstName,\n              lastName: newUser.lastName,\n              initials: newUser.firstName[0] + newUser.lastName[0]\n          })\n        }).then(() => {\n            dispatch({ type: 'SINUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>       \n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    )\n}\n\nexport default SignedOutLinks\n\n// rad 7 och 8 såg ut så i början:\n//<li><NavLink to='/'>Signup</NavLink></li>\n//<li><NavLink to='/'>Signin</NavLink></li>","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    //console.log(auth);\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n    return (\n        <nav className=\"nav-wrapper black lighten-3\">\n        <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">QQsBlog</Link>\n        { links }\n        </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n   console.log(state);          \n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n\n\n    }\n}\n\n\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) =>{\n    const {notifications} = props;\n    return (\n        <div className=\"section\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n                <span className=\"card=title\"><h5>Notifications</h5></span>\n                <ul className=\"notifications\">\n                  { notifications && notifications.map(item => {\n                      return (\n                          <li key={item.id}>\n                              <span className=\"pink-text\"> {item.user} </span>\n                              <span>{item.content}</span>\n                              <div className=\"grey-text note-date\">\n                                  {moment(item.time.toDate()).fromNow()}\n                              </div>\n                          </li>\n                      )\n                  })}  \n                </ul>                   \n            </div>\n        </div>\n        </div>\n      )\n  }\n\n\n  export default Notifications\n\n\n\n//följande förvandrades som rad 11 i V38\n                    //<li>Notification</li>\n                   // <li>Notification</li>\n                    //<li>Notification</li>\n                    //<li>Notification</li>","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n             <div className=\"card-contentgrey-text txt-dark-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n            </div>\n            </div>\n  )\n}\n\n\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return(\n        <div className=\"project-list section\">\n            { projects && projects.map(item => {\n                return (\n                    <Link to={`/project/${item.id}`} key={item.id}>\n              <ProjectSummary project={item} />\n            </Link>\n              )\n            })}          \n        </div>\n    )\n\n    }\n       \n\n export default ProjectList\n \n//   ProjectSummary = följande div\n       //   <div className=\"card z-depth-0 project-summary\">\n         //    <div className=\"card-contentgrey-text txt-dark-3\">\n         //       <span className=\"card-title\">Project Tilte</span>\n         //       <p>Posted by me-QQ</p>\n          //      <p className=\"grey-text\">27 Mars, 2019</p>\n          //  </div>\n        \n\n          //Följande blev byts ut av rad 10, 11, pga felet i console \n         // <Link to={'/project/' + project.id}>  \n          //<ProjectSummary project={project} key={project.id} />                    \n     // </Link>\n       \n\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    //console.log(this.props);\n      const { projects, auth, notifications } = this.props;\n      if (!auth.uid) return <Redirect to='/signin' />\n      \n    return (     \n      <div className=\"dashboard container\">\n       <div className=\"row\">\n         <div className=\"col s12 m6\">\n         <ProjectList projects={projects} />\n         </div>\n         <div className=\"col s12 m5 offset-m1\">\n         <Notifications notifications={notifications}/>\n       </div>\n      </div>\n    </div>\n         \n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  //console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)\n\n\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport{ compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {   \n //  const id = props.match.params.id; (Ändrades i video20)\n //  console.log(props);                (Ändrades i video20)\n     const { project, auth } = props;\n                                      //const { auth } = this.props;   skrev auth i första const istället\n     if(!auth.uid) return <Redirect to='/signin' />\n\n      if (project) {\n        return (\n        <div className=\"container section project-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>  \n        </div>\n        <div className=\"card-action gret lighten-4 grey-text\">\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n        </div>\n     </div>\n    </div>\n        )\n } else {\n   return (\n     <div className=\"container center\">\n       <p>Loading project...</p>\n     </div>\n )\n   }\n  }\n\nconst mapStateToProps = (state, ownProps) =>{\n  console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n}\n}\nexport default compose(\nconnect(mapStateToProps),\nfirestoreConnect([\n  { collection: 'projects' }\n])\n)(ProjectDetails)\n\n\n// Mera info. om console.log(props) / localhost:3000/projet/3\n// sedan inpektera. Följande är en del av inspektera. \n//{history: {…}, location: {…}, match: {…}, staticContext: undefined}\n// history: {length: 14, action: \"POP\", location: {…}, createHref: ƒ, push: ƒ, …}\n// location: {pathname: \"/project/3\", search: \"\", hash: \"\", state: undefined}\n//match: {path: \"/project/:id\", url: \"/project/3\", isExact: true, params: {…}}\n//isExact: true\n// params: {id: \"3\"}\n// url: \"/project/3\"\n//---finns mera info i inspektera\n// Anledningen till info. ovan är för att förstår varifrån \"const id\"\n// Och vad användning är det.\n// T ex om nu ändras localhost:3000/project/4, då visas i browser project title - 4\n// om ändras till QQsAndraApp då visas QQsAndraApp...\n\n// följnade ändrades i Video 20\n// <span className=\"card-title\">Project title - {id}</span>   \n    //ändrades till (se rad )i video 20 \n//<p>Namn brodyr är faktiskt ett bra val att ges som en \n    //minnesfull present till någon som t ex har uppgraderat \n      //sitt judobälte till en högregrad.</p>  ","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport{ signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n   state = {\n     email: '',\n     password: ''  \n   }\n   handleChange = (e) => {\n       this.setState({\n       [e.target.id]: e.target.value               //för kunna registrera email\n       })\n//console.log(e) det här har använts i början\n   }\n   handleSubmit = (e) => {\n       e.preventDefault();                          //för att kunna registrera password\n       this.props.signIn(this.state)\n      // console.log(this.state)   andra omgång skrevs såhär\n//console.log(e) det skrev såhär i början\n   }\n   render() {\n     const { authError, auth } = this.props;\n     if(auth.uid) return <Redirect to='/' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign in</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 zdepth-0\">Login</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{authError}</p> : null }\n              </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n\n\n// Se kommentar i index.html angående sign ins script src effekt","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n   state = {\n     email: '',\n     password: '',  \n     firstName: '',\n     lastName: ''\n   }\n   handleChange = (e) => {\n       this.setState({\n       [e.target.id]: e.target.value               //för kunna registrera email\n       })\n//console.log(e) det här har använts i början\n   }\n   handleSubmit = (e) => {\n       e.preventDefault();                                //för att kunna registrera password\n       this.props.signUp(this.state)\n       //console.log(this.state)      Ändtades till rad21 i v28\n\n//console.log(e) det skrev såhär i början\n   }\n   render() {\n    const { auth, authError } = this.props;\n    if(auth.uid) return <Redirect to='/' />\n\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign up</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n            </div>\n            <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n          </div>\n\n          <div className=\"input-field\">\n              <label htmlFor=\"firstName\">First Name</label>\n              <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n            </div>\n\n          <div className=\"input-field\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n            </div>\n\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 zdepth-0\">Sign Up</button>\n              <div className=\"red-text center\">\n                { authError ? <p>{ authError }</p>: null}\n              </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signUp: (newUser) => dispatch(signUp(newUser))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n   state = {\n     title: '',\n     content: ''  \n   }\n   handleChange = (e) => {\n       this.setState({\n       [e.target.id]: e.target.value               //för kunna registrera email\n       })\n   }\n   handleSubmit = (e) => {\n       e.preventDefault();                          //för att kunna registrera password\n      // console.log(this.state) \n       this.props.createProject(this.state)\n       this.props.history.push('/');                                             //console.log(e) det(rad 17) skrev så här i början\n   }\n      \n\n   render() {\n     const { auth } = this.props;\n     if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n            <div className=\"input-field\">\n              <label htmlFor=\"title\">Title</label>\n              <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n            </div>\n            <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}/>\n          </div>\n          <div className=\"input-field\">\n              <button className=\"btn pink lighten-1 zdepth-0\">create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n\n","export const createProject = (project) => {\n\n     return (dispatch, getState, { getFirebase, getFirestore }) => {\n         // Att göra async till database/make async call to database\n         const firestore = getFirestore();\n         const profile = getState().firebase.profile;\n         const authorId = getState().firebase.auth.uid;\n         firestore.collection('projects').add({\n             ...project,\n             authorFirstName: profile.firstName,\n             authorLastName: profile.lastName,\n             authorId: authorId,\n             createdAt: new Date()\n         }).then(() => {\n             dispatch({ type: 'CREATE_PROJECT', project }); \n         }).catch((err) => {\n             dispatch({ type: 'CREATE_PROJECT_ERROR', err });\n         \n         })       \n      }\n  };\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/Auth/SignIn'\nimport SignUp from './components/Auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nclass App extends Component {\n   state = {\n    projects: [\n      {id: '1', title: 'VittBälte', conent: 'NamnBrodyr Med grått tråd'},\n      {id: '2', title: 'GröntBälte', conent: 'NamnBrodyr Med vitt tråd'},\n      {id: '3', title: 'BlåttBälte', conent: 'NamnBrodyr Med gult tråd'}\n   ]\n   };\n\n\n  render() {\n    return (\n    \n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n\n        </Switch>\n      </div>\n      </BrowserRouter>  \n      \n    );\n  }\n}\n\nexport default App;\n\n//<Route path='/project/:id' component={ProjectDetails } /> \n//<Route path='/' component={Dashboard} />","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","const initState = {\n   authError: null\n}\n\n    const authReducer = (state = initState, action) => {\n      switch(action.type){\n        case 'LOGIN_ERROR':\n          console.log('login error');\n          return {\n             ...state,\n             authError: 'Login failed'\n          }\n        case 'LOGIN_SUCCESS':\n          console.log('login success');\n          return {\n             ...state,\n             authError: null\n          }\n        case 'SIGNOUT_SUCCESS':\n          console.log('signout success');\n          return state;  \n        case 'SIGNUP_SUCCESS':\n          console.log('signup success');\n          return {\n             ...state,\n             authError: null\n          } \n        case 'SIGNUP_ERROR':\n        console.log('signup error')\n        return {\n           ...state,\n           authError: action.err.message\n        }    \n      default:   \n          return state;\n      }\n   }\n    export default authReducer","const initState = {\n    projects: [\n       {id: '1', title: 'VittBälte', conent: 'NamnBrodyr Med grått tråd'},\n       {id: '2', title: 'GröntBälte', conent: 'NamnBrodyr Med vitt tråd'},\n       {id: '3', title: 'BlåttBälte', conent: 'NamnBrodyr Med gult tråd'}\n    ]\n}\n\n    const projectReducer = (state = initState, action) => {\n       switch (action.type) {\n          case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n          case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n            default:\n              return state;    \n       }\n    };\n\n    export default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\n// Initialize Firebase\n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyD7g52zjOuE-1Fb3UsMwn8-7YcnqejtqrA\",\n    authDomain: \"qq-testapp-97a98.firebaseapp.com\",\n    databaseURL: \"https://qq-testapp-97a98.firebaseio.com\",\n    projectId: \"qq-testapp-97a98\",\n    storageBucket: \"qq-testapp-97a98.appspot.com\",\n    messagingSenderId: \"288771212150\"\n  };\n\n\n  firebase.initializeApp(config);\n  //firebase.firestore().settings({ timestampsInSnapshots: true });\n\n  export default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase} from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\n//const fbConfig = { getFirebase }\n\nconst store = createStore(rootReducer,\n   compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: 'users',\n      attachAuthIsReady: true\n    })\n     )\n   );\n   \n    // this prevents to load the dom previous authentication\n    store.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, \n    document.getElementById('root'))  \n   })\n \n    serviceWorker.unregister();\n   //registerServiceWorker();\n \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//-ServiceWorker.unreister();\n "],"sourceRoot":""}